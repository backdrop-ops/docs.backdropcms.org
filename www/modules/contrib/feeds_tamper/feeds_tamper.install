<?php

/**
 * @file
 * Update hooks.
 */

/**
 * Implements hook_update_last_removed().
 */
function feeds_tamper_update_last_removed() {
  return 7004;
}

/**
 * Update Feeds Tamper from Drupal to Backdrop.
 */
function feeds_tamper_update_1000() {
  if (db_table_exists('feeds_tamper')) {
    $feeds_tampers = db_select('feeds_tamper', 'ft')
    ->fields('ft')
    ->execute()
    ->fetchAllAssoc('id');

    $disabled = update_variable_get('default_feeds_tamper', array());

    foreach($feeds_tampers as $tamper) {
      $source_config = config('feeds_tamper.' . $tamper->importer . '.' . $tamper->source);
      if ($source_config->isNew()) {
        $source_config->set('instances.' . $tamper->id, (array) $tamper);
        $source_config->set('instances.' . $tamper->id . '.settings', unserialize($tamper->settings));
        $source_config->set('instances.' . $tamper->id . '.disabled', !empty($disabled[$tamper->id]) ? TRUE : FALSE);
        $source_config->save();
      }
    }
    db_drop_table('feeds_tamper');
  }

  update_variable_del('default_feeds_tamper');
}

/**
 * Put tampers into feeds_importer config files.
 */
function feeds_tamper_update_1001() {
  $old_config_names = config_get_names_with_prefix('feeds_tamper.');
  foreach ($old_config_names as $old_config_name) {
    $old_config = config($old_config_name);
    $instances = $old_config->get('instances');
    foreach ($instances as $instance) {
      $importer_config = config('feeds.feeds_importer.' . $instance['importer']);
      $mappings = $importer_config->get('config.processor.config.mappings');
      foreach ($mappings as $key => $mapping) {
        if ($mapping['source'] == $instance['source'] ) {
          if (!isset($mapping['tampers'])) {
            $importer_config->set('config.processor.config.mappings.' . $key . '.tampers', array());
          }
          unset($instance['importer']);
          unset($instance['source']);
          $importer_config->set('config.processor.config.mappings.' . $key . '.tampers.' . $instance['id'], (object) $instance);
          $importer_config->save();
        }
      }
    }

    $old_config->delete();
  }
}